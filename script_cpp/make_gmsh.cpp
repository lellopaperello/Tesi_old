// Automatic generator for SU2 configuration files (setting velocity)

#include <iostream>
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char const *argv[]) {

   if (argc == 2) {
      FILE * file;
      double Re = atof(argv[1]);
      double rho = 1.2886;
      double mu = 1.716e-5;
      double D = 1;
      double U;

      U = Re * mu / (D*rho);
      std::cout << "Computing solution with Re = " << Re << '\n';

      file = fopen("SU2_config.cfg", "a");
      fprintf(file,
"%% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%%\n"
"%%\n"
"%% Physical governing equations (EULER, NAVIER_STOKES,\n"
"%%                               WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,\n"
"%%                               POISSON_EQUATION)\n"
"PHYSICAL_PROBLEM= NAVIER_STOKES\n"
"%%\n"
"%% Regime type (COMPRESSIBLE, INCOMPRESSIBLE, FREESURFACE)\n"
"REGIME_TYPE= INCOMPRESSIBLE\n"
"%%\n"
"%% If Navier-Stokes, kind of turbulent model (NONE, SA)\n"
"KIND_TURB_MODEL= NONE\n"
"%%\n"
"%% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT)\n"
"MATH_PROBLEM= DIRECT\n"
"%%\n"
"%% Restart solution (NO, YES)\n"
"RESTART_SOL= YES\n"
"\n"
"%% ---------------- INCOMPRESSIBLE FLOW CONDITION DEFINITION -------------------%%\n"
"%%\n"
"%% Initial density for incompressible flows (1.2886 kg/m^3 by default)\n"
"INC_DENSITY_INIT= 1.2886\n"
"%%\n"
"%% Initial velocity for incompressible flows (1.0,0,0 m/s by default)\n"
"INC_VELOCITY_INIT= ( %e , 0.0, 0.0 )\n"
"\n"
"%% --------------------------- VISCOSITY MODEL ---------------------------------%%\n"
"%%\n"
"%% Viscosity model (SUTHERLAND, CONSTANT_VISCOSITY).\n"
"VISCOSITY_MODEL= CONSTANT_VISCOSITY\n"
"%%\n"
"%% Molecular Viscosity that would be constant (1.716E-5 by default)\n"
"MU_CONSTANT= 1.716E-5\n"
"\n"
"%% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%%\n"
"%%\n"
"%% Reference origin for moment computation\n"
"REF_ORIGIN_MOMENT_X = 0.00\n"
"REF_ORIGIN_MOMENT_Y = 0.00\n"
"REF_ORIGIN_MOMENT_Z = 0.00\n"
"%%\n"
"%% Reference length for pitching, rolling, and yawing non-dimensional moment\n"
"REF_LENGTH= 1\n"
"%%\n"
"%% Reference area for force coefficients (0 implies automatic calculation)\n"
"REF_AREA= 0\n"
"\n"
"%% ------------------------- UNSTEADY SIMULATION -------------------------------%%\n"
"%%\n"
"%% Unsteady simulation (NO, TIME_STEPPING, DUAL_TIME_STEPPING-1ST_ORDER,\n"
"%%                      DUAL_TIME_STEPPING-2ND_ORDER)\n"
"UNSTEADY_SIMULATION= NO\n"
"%%\n"
"%% Time Step for dual time stepping simulations (s)\n"
"UNST_TIMESTEP= 0.0\n"
"%%\n"
"%% Total Physical Time for dual time stepping simulations (s)\n"
"UNST_TIME= 50.0\n"
"%%\n"
"%% Unsteady Courant-Friedrichs-Lewy number of the finest grid\n"
"UNST_CFL_NUMBER= 0.0\n"
"%%\n"
"%% Number of internal iterations (dual time method)\n"
"UNST_INT_ITER= 200\n"
"\n"
"%% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%%\n"
"%%\n"
"%% Navier-Stokes wall boundary marker(s) (NONE = no marker)\n"
"MARKER_HEATFLUX= ( cylinder, 0.0 )\n"
"%%\n"
"%% Farfield boundary marker(s) (NONE = no marker)\n"
"MARKER_FAR= ( boundary )\n"
"%%\n"
"%% Marker(s) of the surface to be plotted or designed\n"
"MARKER_PLOTTING= ( cylinder )\n"
"%%\n"
"%% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated\n"
"MARKER_MONITORING= ( cylinder )\n"
"\n"
"%% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%%\n"
"%%\n"
"%% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)\n"
"NUM_METHOD_GRAD= GREEN_GAUSS\n"
"%%\n"
"%% Courant-Friedrichs-Lewy condition of the finest grid\n"
"CFL_NUMBER= 10.0\n"
"%%\n"
"%% Adaptive CFL number (NO, YES)\n"
"CFL_ADAPT= NO\n"
"%%\n"
"%% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,\n"
"%%                                        CFL max value )\n"
"CFL_ADAPT_PARAM= ( 1.5, 0.5, 1.0, 100.0 )\n"
"%%\n"
"%% Runge-Kutta alpha coefficients\n"
"RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )\n"
"%%\n"
"%% Number of total iterations\n"
"EXT_ITER= 9000\n"
"%%\n"
"%% Coefficient for the Venkat's limiter. A larger values decrease the extent of limiting,\n"
"%%             values approaching zero cause lower-order approximation to the solution.\n"
"%%             Recomend value for VENKATAKRISHNAN limiter ~0.5\n"
"%%             Recomend value for VENKATAKRISHNAN_WANG limiter ~0.05\n"
"VENKAT_LIMITER_COEFF= 0.01\n"
"\n"
"%% -------------------------- MULTIGRID PARAMETERS -----------------------------%%\n"
"%%\n"
"%% Multi-Grid Levels (0 = no multi-grid)\n"
"MGLEVEL= 3\n"
"%%\n"
"%% Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE)\n"
"MGCYCLE= V_CYCLE\n"
"%%\n"
"%% Multi-grid pre-smoothing level\n"
"MG_PRE_SMOOTH= ( 1, 2, 3, 3 )\n"
"%%\n"
"%% Multi-grid post-smoothing level\n"
"MG_POST_SMOOTH= ( 1, 1, 1, 1 )\n"
"%%\n"
"%% Jacobi implicit smoothing of the correction\n"
"MG_CORRECTION_SMOOTH= ( 1, 1, 1, 1 )\n"
"%%\n"
"%% Damping factor for the residual restriction\n"
"MG_DAMP_RESTRICTION= 0.75\n"
"%%\n"
"%% Damping factor for the correction prolongation\n"
"MG_DAMP_PROLONGATION= 0.75\n"
"\n"
"%% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%%\n"
"%%\n"
"%% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,\n"
"%%                              TURKEL_PREC, MSW)\n"
"CONV_NUM_METHOD_FLOW= FDS\n"
"%%\n"
"%% Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.\n"
"%%           Required for 2nd order upwind schemes (NO, YES)\n"
"MUSCL_FLOW= YES\n"
"%%\n"
"%% Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,\n"
"%%                BARTH_JESPERSEN, VAN_ALBADA_EDGE)\n"
"SLOPE_LIMITER_FLOW= NONE\n"
"%%\n"
"%% 2nd and 4th order artificial dissipation coefficients\n"
"JST_SENSOR_COEFF= ( 0.5, 0.04 )\n"
"%%\n"
"%% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)\n"
"TIME_DISCRE_FLOW= EULER_IMPLICIT\n"
"\n"
"%% --------------------------- CONVERGENCE PARAMETERS --------------------------%%\n"
"%%\n"
"%% Convergence criteria (CAUCHY, RESIDUAL)\n"
"%%\n"
"CONV_CRITERIA= RESIDUAL\n"
"%%\n"
"%% Residual reduction (order of magnitude with respect to the initial value)\n"
"RESIDUAL_REDUCTION= 8\n"
"%%\n"
"%% Min value of the residual (log10 of the residual)\n"
"RESIDUAL_MINVAL= -10\n"
"%%\n"
"%% Start convergence criteria at iteration number\n"
"STARTCONV_ITER= 10\n"
"%%\n"
"%% Number of elements to apply the criteria\n"
"CAUCHY_ELEMS= 100\n"
"%%\n"
"%% Epsilon to control the series convergence\n"
"CAUCHY_EPS= 1E-6\n"
"%%\n"
"%% Function to apply the criteria (LIFT, DRAG, NEARFIELD_PRESS, SENS_GEOMETRY,\n"
"%% 	      	    		 SENS_MACH, DELTA_LIFT, DELTA_DRAG)\n"
"CAUCHY_FUNC_FLOW= DRAG\n"
"\n"
"%% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%%\n"
"%%\n"
"%% Mesh input file\n"
"MESH_FILENAME= mesh.su2\n"
"%%\n"
"%% Mesh input file format (SU2, CGNS, NETCDF_ASCII)\n"
"MESH_FORMAT= SU2\n"
"%%\n"
"%% Restart flow input file\n"
"SOLUTION_FLOW_FILENAME= solution_flow.dat\n"
"%%\n"
"%% Output file format (PARAVIEW, TECPLOT)\n"
"OUTPUT_FORMAT= PARAVIEW\n"
"%%\n"
"%% Output file convergence history (w/o extension)\n"
"CONV_FILENAME= history\n"
"%%\n"
"%% Output file restart flow\n"
"RESTART_FLOW_FILENAME= restart_flow.dat\n"
"%%\n"
"%% Output file flow (w/o extension) variables\n"
"VOLUME_FLOW_FILENAME= flow\n"
"%%\n"
"%% Output file surface flow coefficient (w/o extension)\n"
"SURFACE_FLOW_FILENAME= surface_flow\n"
"%%\n"
"%% Writing solution file frequency\n"
"WRT_SOL_FREQ= 1000\n"
"%%\n"
"%% Writing convergence history frequency\n"
"WRT_CON_FREQ= 1\n"
         , U);
      fclose(file);






   }else{
      std::cout << "No argument specified, please provide one" << '\n';
   }

   return 0;
}
